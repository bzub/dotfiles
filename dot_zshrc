#!/usr/bin/env zsh

source "${HOME}/.secret-rc.sh"
source /usr/local/opt/antidote/share/antidote/antidote.zsh
antidote load

cache_dir="/tmp/zsh_source_cache"
mkdir -p "${cache_dir}"

get_cache_file() {
  name="${1}"
  cache_file="${cache_dir}/${name}.zsh"
  echo "${cache_file}"
}

check_cache_file() {
  cache_file="${1}"
  if [ -f "${cache_file}" ]; then
    return 0
  fi
  return 1
}

for tool in kubectl kpt talosctl; do
  if [ $commands[$tool] ]; then
    cache_file="$(get_cache_file "${tool}")"
    if ! check_cache_file "${cache_file}"; then
      echo "[INFO] putting completions in ${cache_file}"
      "${tool}" completion zsh > "${cache_file}"
    fi
    source "${cache_file}"
  fi
done

if [ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc" ]; then
  source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
  source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'
fi

if [ $commands[fzf] ]; then
  source /usr/local/opt/fzf/shell/completion.zsh
  source /usr/local/opt/fzf/shell/key-bindings.zsh
fi

if [ $commands[gh] ]; then
  source <(gh completion -s zsh)
fi

autoload -Uz compinit
fpath=(~/.zsh/completion $fpath)
compinit -i

# Set any settings or overrides here
autoload -Uz promptinit && promptinit && prompt pure
bindkey -v

export TERM=alacritty
export EDITOR='nvim --cmd "let g:unception_block_while_host_edits=1"'
export KUBECONFIG="${HOME}/.kube/config:${HOME}/.kube/config-base:${HOME}/.kube/config-management"
export HOMEBREW_AUTOREMOVE="true"
export HOMEBREW_NO_ANALYTICS="true"
export HOMEBREW_NO_ENV_HINTS="true"
export HISTSIZE=999999999
export SAVEHIST=$HISTSIZE
export USE_GKE_GCLOUD_AUTH_PLUGIN=True
export DOCKER_HOST="unix://${HOME}/.colima/default/docker.sock"
